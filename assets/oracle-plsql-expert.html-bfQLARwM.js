import{_ as s,c as a,d as e,o as t}from"./app-DyyEhrgI.js";const p={};function l(i,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="van-ƒëe-khi-su-dung-pl-sql-thuc-te-expert" tabindex="-1"><a class="header-anchor" href="#van-ƒëe-khi-su-dung-pl-sql-thuc-te-expert"><span>V·∫•n ƒë·ªÅ khi s·ª≠ d·ª•ng PL/SQL th·ª±c t·∫ø (Expert)</span></a></h1><p><a href="#1">1. PL/SQL Performance Tuning</a></p><p><a href="#2">2. B·∫£o m·∫≠t trong PL/SQL</a></p><p><a name="1"></a></p><h2 id="üìå-1-pl-sql-performance-tuning" tabindex="-1"><a class="header-anchor" href="#üìå-1-pl-sql-performance-tuning"><span>üìå 1. PL/SQL Performance Tuning</span></a></h2><p>T·ªëi ∆∞u hi·ªáu su·∫•t PL/SQL r·∫•t quan tr·ªçng ƒë·ªÉ gi·∫£m th·ªùi gian ch·∫°y, gi·∫£m t·∫£i h·ªá th·ªëng v√† c·∫£i thi·ªán tr·∫£i nghi·ªám ng∆∞·ªùi d√πng.</p><p>D∆∞·ªõi ƒë√¢y l√† c√°c k·ªπ thu·∫≠t t·ªëi ∆∞u quan tr·ªçng:</p><h3 id="üîπ-su-dung-bulk-collect-forall-thay-vi-vong-lap-for-loop" tabindex="-1"><a class="header-anchor" href="#üîπ-su-dung-bulk-collect-forall-thay-vi-vong-lap-for-loop"><span>üîπ S·ª≠ d·ª•ng BULK COLLECT &amp; FORALL thay v√¨ v√≤ng l·∫∑p FOR/LOOP</span></a></h3><p>‚ùå Khi ch·∫°y SELECT INTO ho·∫∑c INSERT/UPDATE/DELETE t·ª´ng d√≤ng trong v√≤ng l·∫∑p, PL/SQL ph·∫£i li√™n t·ª•c g·ªçi SQL Engine, g√¢y ch·∫≠m.</p><p>‚úîÔ∏è D√πng BULK COLLECT (truy v·∫•n nhanh h∆°n) v√† FORALL (ghi d·ªØ li·ªáu h√†ng lo·∫°t) s·∫Ω ch·ªâ g·ªçi SQL Engine 1 l·∫ßn.</p><h3 id="üîπ-dung-index-hieu-qua" tabindex="-1"><a class="header-anchor" href="#üîπ-dung-index-hieu-qua"><span>üîπ D√πng Index hi·ªáu qu·∫£</span></a></h3><p>‚ùå Truy v·∫•n WHERE m√† kh√¥ng c√≥ Index s·∫Ω qu√©t to√†n b·ªô b·∫£ng (Full Table Scan), l√†m gi·∫£m hi·ªáu su·∫•t.</p><p>‚úîÔ∏è Th√™m Index v√†o c·ªôt th∆∞·ªùng xuy√™n t√¨m ki·∫øm, JOIN ho·∫∑c ORDER BY.</p><h3 id="üîπ-tranh-su-dung-exception-khong-can-thiet" tabindex="-1"><a class="header-anchor" href="#üîπ-tranh-su-dung-exception-khong-can-thiet"><span>üîπ Tr√°nh s·ª≠ d·ª•ng EXCEPTION kh√¥ng c·∫ßn thi·∫øt</span></a></h3><p>‚ùå EXCEPTION l√†m ch·∫≠m ch∆∞∆°ng tr√¨nh n·∫øu kh√¥ng x·ª≠ l√Ω h·ª£p l√Ω.</p><p>‚úîÔ∏è Ki·ªÉm tra ƒëi·ªÅu ki·ªán tr∆∞·ªõc khi th·ª±c hi·ªán thao t√°c c√≥ kh·∫£ nƒÉng l·ªói. M·ª•c ƒë√≠ch kh√¥ng ƒë·ªÉ ch∆∞∆°ng tr√¨nh ph·∫£i b·∫Øt l·ªói kh√¥ng c·∫ßn thi·∫øt.</p><p>V√≠ d·ª•:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">DECLARE</span></span>
<span class="line">    v_count NUMBER<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">INTO</span> v_count <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> employee_id <span class="token operator">=</span> <span class="token number">101</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">IF</span> v_count <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">THEN</span></span>
<span class="line">        <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> employees <span class="token punctuation">(</span>employee_id<span class="token punctuation">,</span> first_name<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">,</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">ELSE</span></span>
<span class="line">        DBMS_OUTPUT<span class="token punctuation">.</span>PUT_LINE<span class="token punctuation">(</span><span class="token string">&#39;Employee ID ƒë√£ t·ªìn t·∫°i!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token operator">/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="üîπ-han-che-su-dung-triggers-khi-khong-can-thiet" tabindex="-1"><a class="header-anchor" href="#üîπ-han-che-su-dung-triggers-khi-khong-can-thiet"><span>üîπ H·∫°n ch·∫ø s·ª≠ d·ª•ng Triggers khi kh√¥ng c·∫ßn thi·∫øt</span></a></h3><p>‚ùå Triggers ch·∫°y ng·∫ßm m·ªói khi c√≥ thao t√°c INSERT/UPDATE/DELETE, c√≥ th·ªÉ g√¢y ch·∫≠m.</p><p>‚úîÔ∏è N·∫øu logic trigger c√≥ th·ªÉ ƒë∆∞·ª£c th·ª±c hi·ªán trong Stored Procedure, h√£y d√πng Stored Procedure thay v√¨ Trigger.</p><p><a name="2"></a></p><h2 id="üìå-2-bao-mat-trong-pl-sql" tabindex="-1"><a class="header-anchor" href="#üìå-2-bao-mat-trong-pl-sql"><span>üìå 2. B·∫£o m·∫≠t trong PL/SQL</span></a></h2><p>B·∫£o m·∫≠t trong PL/SQL r·∫•t quan tr·ªçng ƒë·ªÉ b·∫£o v·ªá d·ªØ li·ªáu, ki·ªÉm so√°t quy·ªÅn truy c·∫≠p v√† ngƒÉn ch·∫∑n c√°c cu·ªôc t·∫•n c√¥ng nh∆∞ SQL Injection.</p><p>D∆∞·ªõi ƒë√¢y l√† c√°c kh√≠a c·∫°nh quan tr·ªçng v·ªÅ b·∫£o m·∫≠t trong PL/SQL:</p><h3 id="üîπ-kiem-soat-quyen-truy-cap-voi-grant-va-revoke" tabindex="-1"><a class="header-anchor" href="#üîπ-kiem-soat-quyen-truy-cap-voi-grant-va-revoke"><span>üîπ Ki·ªÉm so√°t quy·ªÅn truy c·∫≠p v·ªõi GRANT v√† REVOKE</span></a></h3><ul><li><p>Kh√¥ng ph·∫£i ng∆∞·ªùi d√πng n√†o c≈©ng n√™n c√≥ to√†n quy·ªÅn tr√™n database.</p></li><li><p>N·∫øu ai c≈©ng c√≥ quy·ªÅn SELECT, INSERT, UPDATE, DELETE, d·ªØ li·ªáu c√≥ th·ªÉ b·ªã l·ªô ho·∫∑c ch·ªânh s·ª≠a ngo√†i √Ω mu·ªën.</p></li></ul><p>üí° S·ª≠ d·ª•ng GRANT (c·∫•p quy·ªÅn) v√† REVOKE (thu h·ªìi quy·ªÅn) gi√∫p ki·ªÉm so√°t quy·ªÅn truy c·∫≠p c·ªßa ng∆∞·ªùi d√πng.</p><h4 id="_1Ô∏è‚É£-cap-quyen-grant" tabindex="-1"><a class="header-anchor" href="#_1Ô∏è‚É£-cap-quyen-grant"><span>1Ô∏è‚É£ C·∫•p quy·ªÅn (GRANT)</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">GRANT</span> <span class="token keyword">SELECT</span><span class="token punctuation">,</span> <span class="token keyword">INSERT</span> <span class="token keyword">ON</span> employees <span class="token keyword">TO</span> hr_user<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">GRANT</span> <span class="token keyword">EXECUTE</span> <span class="token keyword">ON</span> update_salary <span class="token keyword">TO</span> hr_user<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>‚úÖ hr_user c√≥ th·ªÉ SELECT, INSERT v√†o b·∫£ng employees v√† g·ªçi procedure update_salary</p><h4 id="_2Ô∏è‚É£-thu-hoi-quyen-revoke" tabindex="-1"><a class="header-anchor" href="#_2Ô∏è‚É£-thu-hoi-quyen-revoke"><span>2Ô∏è‚É£ Thu h·ªìi quy·ªÅn (REVOKE)</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">REVOKE</span> <span class="token keyword">INSERT</span> <span class="token keyword">ON</span> employees <span class="token keyword">FROM</span> hr_user<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>‚úÖ hr_user b·ªã m·∫•t quy·ªÅn INSERT tr√™n b·∫£ng employees.</p><h3 id="üîπ-definer-vs-invoker-rights" tabindex="-1"><a class="header-anchor" href="#üîπ-definer-vs-invoker-rights"><span>üîπ DEFINER vs INVOKER RIGHTS</span></a></h3><p>M·∫∑c ƒë·ªãnh, khi m·ªôt user g·ªçi Procedure ho·∫∑c Function, n√≥ s·∫Ω ch·∫°y v·ªõi quy·ªÅn c·ªßa ng∆∞·ªùi t·∫°o ra n√≥ (DEFINER).</p><p>‚û°Ô∏è N·∫øu admin_user t·∫°o m·ªôt PROCEDURE get_salary, th√¨ b·∫•t k·ª≥ ai g·ªçi n√≥ c≈©ng c√≥ th·ªÉ xem l∆∞∆°ng c·ªßa nh√¢n vi√™n, ngay c·∫£ khi h·ªç kh√¥ng c√≥ quy·ªÅn xem b·∫£ng employees.</p><p>üí° S·ª≠ d·ª•ng AUTHID CURRENT_USER n·∫øu mu·ªën Procedure ch·∫°y theo quy·ªÅn c·ªßa ng∆∞·ªùi g·ªçi (INVOKER).</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token operator">OR</span> <span class="token keyword">REPLACE</span> <span class="token keyword">PROCEDURE</span> get_salary AUTHID <span class="token keyword">CURRENT_USER</span> <span class="token operator">IS</span></span>
<span class="line">    v_salary NUMBER<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">SELECT</span> salary <span class="token keyword">INTO</span> v_salary <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> employee_id <span class="token operator">=</span> <span class="token number">101</span><span class="token punctuation">;</span></span>
<span class="line">    DBMS_OUTPUT<span class="token punctuation">.</span>PUT_LINE<span class="token punctuation">(</span><span class="token string">&#39;Salary: &#39;</span> <span class="token operator">||</span> v_salary<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token operator">/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="üîπ-kiem-soat-truy-cap-bang-virtual-private-database-vpd" tabindex="-1"><a class="header-anchor" href="#üîπ-kiem-soat-truy-cap-bang-virtual-private-database-vpd"><span>üîπ Ki·ªÉm so√°t truy c·∫≠p b·∫±ng Virtual Private Database (VPD)</span></a></h3><p>M·ªôt s·ªë ng∆∞·ªùi d√πng ch·ªâ n√™n th·∫•y m·ªôt ph·∫ßn d·ªØ li·ªáu ch·ª© kh√¥ng ph·∫£i to√†n b·ªô b·∫£ng.</p><p>‚û°Ô∏è D√πng VPD (Virtual Private Database) s·∫Ω gi√∫p l·ªçc d·ªØ li·ªáu t·ª± ƒë·ªông.</p><p>üîç V√≠ d·ª•: Ch·ªâ cho ph√©p nh√¢n vi√™n th·∫•y d·ªØ li·ªáu c·ªßa ch√≠nh h·ªç</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    DBMS_RLS<span class="token punctuation">.</span>ADD_POLICY <span class="token punctuation">(</span></span>
<span class="line">        object_schema   <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;HR&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        object_name     <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;EMPLOYEES&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        policy_name     <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;EMPLOYEE_FILTER&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        function_schema <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;HR&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        policy_function <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;emp_filter&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        statement_types <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;SELECT&#39;</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token operator">/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,44)]))}const o=s(p,[["render",l],["__file","oracle-plsql-expert.html.vue"]]),r=JSON.parse('{"path":"/blog-posts/back-end/oracle-plsql-expert.html","title":"V·∫•n ƒë·ªÅ khi s·ª≠ d·ª•ng PL/SQL th·ª±c t·∫ø","lang":"vi-VN","frontmatter":{"title":"V·∫•n ƒë·ªÅ khi s·ª≠ d·ª•ng PL/SQL th·ª±c t·∫ø","summary":"T·ªëi ∆∞u hi·ªáu su·∫•t v√† v·∫•n ƒë·ªÅ b·∫£o m·∫≠t trong PL/SQL lu√¥n l√† c√°c ch·ªß ƒë·ªÅ quan tr·ªçng khi s·ª≠ d·ª•ng PL/SQL trong th·ª±c t·∫ø.","date":"2025-06-15","image":"/vuepress-blog/images/posts/plsql.png","category":"BACK-END","tags":["oracle","training-plsql"]},"headers":[{"level":2,"title":"üìå 1. PL/SQL Performance Tuning","slug":"üìå-1-pl-sql-performance-tuning","link":"#üìå-1-pl-sql-performance-tuning","children":[{"level":3,"title":"üîπ S·ª≠ d·ª•ng BULK COLLECT & FORALL thay v√¨ v√≤ng l·∫∑p FOR/LOOP","slug":"üîπ-su-dung-bulk-collect-forall-thay-vi-vong-lap-for-loop","link":"#üîπ-su-dung-bulk-collect-forall-thay-vi-vong-lap-for-loop","children":[]},{"level":3,"title":"üîπ D√πng Index hi·ªáu qu·∫£","slug":"üîπ-dung-index-hieu-qua","link":"#üîπ-dung-index-hieu-qua","children":[]},{"level":3,"title":"üîπ Tr√°nh s·ª≠ d·ª•ng EXCEPTION kh√¥ng c·∫ßn thi·∫øt","slug":"üîπ-tranh-su-dung-exception-khong-can-thiet","link":"#üîπ-tranh-su-dung-exception-khong-can-thiet","children":[]},{"level":3,"title":"üîπ H·∫°n ch·∫ø s·ª≠ d·ª•ng Triggers khi kh√¥ng c·∫ßn thi·∫øt","slug":"üîπ-han-che-su-dung-triggers-khi-khong-can-thiet","link":"#üîπ-han-che-su-dung-triggers-khi-khong-can-thiet","children":[]}]},{"level":2,"title":"üìå 2. B·∫£o m·∫≠t trong PL/SQL","slug":"üìå-2-bao-mat-trong-pl-sql","link":"#üìå-2-bao-mat-trong-pl-sql","children":[{"level":3,"title":"üîπ Ki·ªÉm so√°t quy·ªÅn truy c·∫≠p v·ªõi GRANT v√† REVOKE","slug":"üîπ-kiem-soat-quyen-truy-cap-voi-grant-va-revoke","link":"#üîπ-kiem-soat-quyen-truy-cap-voi-grant-va-revoke","children":[]},{"level":3,"title":"üîπ DEFINER vs INVOKER RIGHTS","slug":"üîπ-definer-vs-invoker-rights","link":"#üîπ-definer-vs-invoker-rights","children":[]},{"level":3,"title":"üîπ Ki·ªÉm so√°t truy c·∫≠p b·∫±ng Virtual Private Database (VPD)","slug":"üîπ-kiem-soat-truy-cap-bang-virtual-private-database-vpd","link":"#üîπ-kiem-soat-truy-cap-bang-virtual-private-database-vpd","children":[]}]}],"git":{},"filePathRelative":"blog-posts/back-end/oracle-plsql-expert.md"}');export{o as comp,r as data};
